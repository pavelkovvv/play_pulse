# Generated by Django 5.0.2 on 2024-02-25 18:23

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import personal_area_user.models.user_info
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('username', models.CharField(help_text='Ник пользователя', max_length=40, unique=True, verbose_name='Ник пользователя')),
                ('email', models.EmailField(blank=True, help_text='Email пользователя', max_length=254, verbose_name='Почта пользователя')),
                ('is_admin', models.BooleanField(default=False, help_text='Является ли пользователь администратором', verbose_name='Флаг наличия прав администратора')),
                ('is_active', models.BooleanField(default=False, help_text='Онлайн пользователь или нет', verbose_name='Флаг наличия онлайна пользователя')),
                ('first_name', models.CharField(blank=True, help_text='Имя пользователя', max_length=35, verbose_name='Имя пользователя')),
                ('last_name', models.CharField(blank=True, help_text='Фамилия пользователя', max_length=35, verbose_name='Фамилия пользователя')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='Дата регистрации пользователя', verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex', models.CharField(blank=True, help_text='Пол пользователя')),
                ('birth_date', models.DateField(blank=True, help_text='Дата рождения пользователя', null=True)),
                ('address', models.TextField(blank=True, help_text='Местонахождение пользователя', max_length=135)),
                ('phone_number', models.CharField(help_text='Номер телефона пользователя', max_length=15, validators=[personal_area_user.models.user_info.validate_phone_number])),
                ('photo', models.ImageField(default='media/ava/default_images/undefined_user.jpg', help_text='Аватарка пользователя', upload_to='ava/')),
                ('bio', models.TextField(blank=True, help_text='Раздел "О себе"', max_length=300)),
                ('user', models.OneToOneField(help_text='Связь личной информации пользователя с пользователем', on_delete=django.db.models.deletion.CASCADE, related_name='info_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Личная информация пользователя',
                'verbose_name_plural': 'Личная информация пользователей',
            },
        ),
    ]
